The network interface is somewhat difficult as we want to be
low-latency, high bandwidth, enable retransmission of lost datagrams,
and we also want to be easy to implement in hardware.

Our target functions are: 

Transmit: 
1. variable-length data bus UDP datagrams
2. fixed-length event bus UDP datagrams
3. arp responses
4. ICMP-echo responses
5. retransmit-request responses
6. echo-input responses

Receive: 
1. event datagrams
2. arp queries
3. icmp queries
4. retransmission requests

\section{Overview}

We have an input/output mux configuration. We multiplex through the mux. 


\section{TX Prioritization} 

Our goal is to transmit at least one event packet and as many data
packets as are necessary per frame.

A data packet is going to be at most 280 ticks (560 bytes) long, and a
event packet is going to be at most 550 ticks (1100 bytes) long.

This means that we can transmit one event and 1.6 data packets per
ecycle, or 50 event packets and 80 data packets per ms.

We implement a TX prioritization scheme with port 0 always being
checked for pending TX before port 1, etc.


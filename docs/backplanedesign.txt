4Notes on backplane design:

Syscontrol CONF pinouts:
			New:
CONF0    DONE		CONF0
CONF1	 CCLK		FPGACCLK
CONF2	 PROGRAM	CONF1
CONF3	 DIN		FPGADIN
CONF4	 INTI		CONF2

------------------------------------------------------------------------------
Power concerns:
------------------------------------------------------------------------------
All the SFX PSUs output ~16 A max on the 3.3V rail, which should be more than enough for the 16 DSP boards. However:
1. The combined power from the 3.3 and 5V rails leaves us with only around 1A at 5V, not enough to power the rest of the 3.3V subsystem with LDOs. 
2. The bulk of the extra power in higher-power units is delivered to the 12V rail, and the only way we're going to tap into this without turning the box into a furnace is to use a switching regulator. 

Okay, so most of the cool TI power regulators that are easy to use also have horrible horrible input voltage maximums, like 5V. Yea, right. So we're using the TPS54356, along with their SWIFT designer tool. It recommends the following parts:


Inductor: 22 uH CDRH127-220 (308-1081-1-ND $3.05)
Mosfet : ZXM64N02X (ZXM64N02XCT-ND $2.39)
Output Cap: TPSD107M010R0100 100uF, 10V, 100 mOhm (478-1779-1-ND, $2.35)
Input Bulk Cap: EEVFK1C152Q, 1500uF (PCE3459CT-ND, $1.416)
Input Bypass Cap: C3225X5R1C106M (445-1400-1-ND, $2.20)



------------------------------------------------------------------------------
FPGA Architecture
------------------------------------------------------------------------------
Thanks to screaming-circuit's cheap fast BGA placement, we're going to use one of the 400+ ping XC3S1000s 



------------------------------------------------------------------------------
Network Subsystem
------------------------------------------------------------------------------

Network operation and functions:
Must aggreagate data from the data bus, turn it into packets, and save those packets. Thus, we're really really going to end up having to multiplex our memory access scheme. Inputs aren't as big of an issue, because the class which we'll be receiving are generally small, and the input buffer on the NIC can, again in genreal, handle them anyway. 

Consider an exokernel approach; this will work well. 

We're running the ram at 60 MHz, but it'll be driven by the FPGA, so we can change this later. We've also got the 32-bit wide interface, allowing for essentially DDR if we want. 

20 MHz Sysclock. Whee. We can synthesisze as long as we don't care about maintaining phase relationships, but we don't really anway; yay for easy async interfaces. 


-----------------------------------------------------------------------------
CLOCKS
-----------------------------------------------------------------------------
A single 20 MHz clock oscillator will drive the board; it will be physically located at the bottom of the backplane, and we'll use a series of clock distribution ICs. 



-----------------------------------------------------------------------------
System FPGA
-----------------------------------------------------------------------------

Responsible for boot control, timing control, and general system status. 

More than enough for a good mating to an 8051

Holy crap, someone has a full LGPL'd and documented 8051. And even better, there's a full, very well documented PIC implementation by silicore. As VHDL. Rock on. 

So really, though, there's no real excuse for an external 8051 clone. Whee! 

Now, this will also need the LCD interface, we should look at that...

-----------------------------------------------------------------------------
DISPLAY
-----------------------------------------------------------------------------
This is the one recommended by optrex, not digikey, although digikey sells them:

CXA-L10L
http://www.tdk.co.jp/tefe02/eA434_CXAL10.pdf

We connect to this in the 10 mA configuration and use a termblock. 

The LCDs are fickle beasts, need an LCD drive voltage of 26.6 V, or something like that. Will want to experiment ahead of time.

The flat ribbon connector (flatflex, or ffc, or FPC for flat panel connector ) uses 1.25mm pitch connectors. The best connector, apparently, is the molex 39-51-3144, which avnet has in stock. 



For output power, we need 20 mA or so at -25V (VEE), giving a Vcc-Vee = 30 V. 

We're using a charge-pump configuration . 
This suggests an inductor of 82 uH, but we're going to use the ELJ-EA220KF, which is happily small, and has a DCR of .65 ohm, and can handle 115 mA. Potentially our saturation current is going to go to 113 mA. 

We're going to drive this thing from the 3.3V supply. There are also 3.3V tolerance issues. 

-----------------------------------------------------------------------
BOOT Configuration
-----------------------------------------------------------------------

We'd like to be able to boot the backplane without the peripehral card in, for debugging purposes. At the same time, we'd like the nominal boot cycle to be via the peripheral interface.

So, we're going to slightly redesign the backplane (hell, we have the time and the money) such that it will actually be the CF interface that will boot first on power-up, and then this will boot the SYSTEM FPGA, which will then read data from that interface and boot everything else. Thus everything but the CF IO can be kept ont he CF. 

-----------------------------------------------------------------------
PCB Layout
-----------------------------------------------------------------------
BGA
What a pain. Against Xilinx' recommendations, in an attempt to comply with PCBpro's manufacturing guidelines, we're shrinking the size of the intra-FPGA vias (for BGA fanout) to 10 mils with 10 mil pads. All have full tenting on top. They are located exactly at the center of 4 pads. This is necessary so that we can route out the 6 mil traces. 


-----------------------------------------------------------------------
CHECKING
-----------------------------------------------------------------------
Clock subsystem:
  CY29942: Schematic valid, package valid
  OSC OE pin correct
  

Backplane FPGA boot config: 
  All config pins connected to peripheral IO
  FPGA JTAG : verified

Physical configuration: 
  Mounting holes:  check
  DSP holes: check

Pull-up on PROGRAM for backplane FPGA



Events

\subsection{Get Handle}

Get Handle: 
CMD: 0x90
SRC: 
DATA: none

\response
CMD: 0x90
SRC: DEVICE
DATA0: success/failure
DATA1: handle | 0x00

success = 0; failure = anything else


set filename: 
CMD: 0x91:
DATA0: HANDLE | OFFSET
DATA1:  CHAR[0] | CHAR[1]
DATA4:  CHAR[6] | CHAR[7]

(no response)
OPEN FILENAME: 
CMD: 0x92
SRC: 
DATA: Handle

Response: 
CMD: 0x92
SRC: DEVICE
DATA0: 0x01: success, anything else: failure
DATA1: len
DATA2: len


READ DATA: 
CMD: 0x93
SRC: 
DATA0: HANDLE | 0x00
DATA1: ADDR[31:16]
DATA2: ADDR[15:0]
DATA3: LEN[31:16]
DATA4: LEN[15:0]

Response: ... Trickier, 8 bytes at a time

 
CMD: 0x94
SRC: DEVICE
DATA0: 8-byte-block #, i.e. which event # this is of the read events we're going to get (this limits a read cmd to ... some number of bytes?)
DATA1: bytes[0] & bytes[1]
...

What are words that we need to send? 

Obviously particular CMDs, and to either a PENDING or CUR src
words from the SPI interface output
The Handle
Response success/failure
8-byte rx block ID
